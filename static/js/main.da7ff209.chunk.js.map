{"version":3,"sources":["actions/index.js","containers/search_bar.js","components/temperature.js","components/weather_description.js","components/google_places_image.js","components/formatted_time.js","components/time_updated.js","components/city_banner.js","components/other_stats.js","containers/weather_details.js","App.js","serviceWorker.js","reducers/index.js","reducers/weather_for_city.js","index.js"],"names":["FETCH_CITY_WEATHER","WEATHERMAP_ROOT_URL","concat","fetchCityWeather","city","url","req","axios","get","type","payload","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cityStr","_this2","react_default","a","createElement","className","onSubmit","e","handleSubmit","placeholder","value","onChange","handleChange","preventDefault","setState","target","defaultCity","Component","connect","dispatch","bindActionCreators","Temperature","units","id","tempInSelectedUnits","weatherData","main","temp","href","onClick","temp_max","temp_min","celsius","Math","floor","WeatherDescription","weather","description","google","window","GooglePlacesImage","imgUrl","imgLoaded","onPlaceSearchComplete","bind","assertThisInitialized","onPlacesImageLoaded","renderGooglePlacesImg","prevProps","name","ref","src","alt","onLoad","map","mapCenter","maps","LatLng","coord","lat","lon","Map","refs","center","zoom","request","query","fields","places","PlacesService","findPlaceFromQuery","results","status","PlacesServiceStatus","OK","photos","getUrl","maxWidth","min-height","FormattedTime","date","Date","timestamp","minutes","getMinutes","hours","getHours","ampm","timeString","substr","TimeUpdated","getDay","formatted_time","CityBanner","sys","country","time_updated","dt","google_places_image_GooglePlacesImage","OtherStats","scope","pressure","humidity","sunrise","sunset","WeatherDetails","length","city_banner","temperature","weather_description","other_stats","weatherForCity","App","search_bar","weather_details","Boolean","location","hostname","match","rootReducer","combineReducers","arguments","undefined","action","data","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","reducers","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da7ff209.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const FETCH_CITY_WEATHER = 'FETCH_CITY_WEATHER';\nconst WEATHERMAP_API_KEY = '7f9eb6ac12c1f9bb70c46745d236904e';\nconst WEATHERMAP_ROOT_URL = `https://api.openweathermap.org/data/2.5/weather?appid=${WEATHERMAP_API_KEY}`\n\nexport function fetchCityWeather(city) {\n  const url = `${WEATHERMAP_ROOT_URL}&q=${city}`;\n  const req = axios.get(url);\n  return {\n    type: FETCH_CITY_WEATHER,\n    payload: req\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchCityWeather } from '../actions/index'\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { cityStr: \"\" }\n  }\n  \n  render () {\n    return (\n        <div className=\"card-header py-3\">\n          <form onSubmit={ (e) => {this.handleSubmit(e)} }>\n            <div className=\"input-group mx-auto\">\n              <input type=\"text\" className=\"form-control bg-dark font-weight-light text-light border  border-secondary\" placeholder=\"Search for a city\" \n                value={this.state.cityStr}\n                onChange={ (e) => this.handleChange(e) } \n              />\n            <div className=\"input-group-append\">\n              <button type=\"submit\" className=\"btn btn-dark border border-secondary\">\n                <span className=\"oi oi-magnifying-glass\"></span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.fetchCityWeather(this.state.cityStr);\n    this.setState({cityStr: ''})\n  }\n  \n  handleChange(e) {\n    this.setState({cityStr: e.target.value});\n  }\n\n  componentDidMount() {\n    this.props.fetchCityWeather(this.props.defaultCity);\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators( { fetchCityWeather }, dispatch )\n}\n\nexport default connect(null, mapDispatchToProps) (SearchBar)","import React, { Component } from 'react'\n\nclass Temperature extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      units: \"F\"\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"position-relative w-100 h-100\">\n        <div id=\"tempContainer\" className=\"text-center w-100 position-absolute\">\n          <div id=\"tempCircle\" className=\"d-flex flex-row justify-content-center mx-auto rounded-circle bg-light text-dark\">\n            <h1 className=\"display-3 mb-0 align-self-center\">\n              {this.tempInSelectedUnits(this.props.weatherData.main.temp)}\n            </h1>\n            <p className=\"m-0 align-self-center\">\n              <button className={`btn btn-light border-0 px-1 py-0 ${this.state.units === \"F\" ? \"text-info\" : \"text-muted\"}`} href=\"#\"\n              onClick={ (e) => this.setState({units: \"F\"}) }>&deg;F</button>\n              <span >|</span>\n              <button className={`btn btn-light border-0 px-1 py-0 ${this.state.units === \"C\" ? \"text-info\" : \"text-muted\"}`} href=\"C\"\n              onClick={ (e) => this.setState({units: \"C\"}) }>&deg;C</button>\n            </p>\n          </div>\n          <p className=\"p-3\">\n            High {this.tempInSelectedUnits(this.props.weatherData.main.temp_max)}&deg;{this.state.units} | \n            Low {this.tempInSelectedUnits(this.props.weatherData.main.temp_min)}&deg;{this.state.units}\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  tempInSelectedUnits(temp) {\n    const kelvin = temp;\n    const celsius = kelvin - 273;\n\n    switch (this.state.units) {\n      case \"F\": \n        return Math.floor(celsius * (9/5) + 32);\n      case \"C\":\n        return Math.floor(celsius);\n      default:\n        return null;  \n    }\n  }\n}\n\nexport default Temperature","import React from 'react'\n\nconst WeatherDescription = (props) => {\n  return (\n    <div id=\"weatherDescription\" className=\"text-center pb-4\">\n      <h2 className=\"font-weight-light mb-0\">\n        <i className={`mr-2 align-middle owf owf-${props.weatherData.weather[0].id}`}></i>\n        {props.weatherData.weather[0].main}\n      </h2>\n      <p className=\"text-muted mb-0\">{props.weatherData.weather[0].description}</p>\n    </div>\n  )\n}\n\nexport default WeatherDescription","import React, { Component } from 'react';\n\nconst google = window.google;\n\nexport default class GooglePlacesImage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      imgUrl: this.props.imgUrl,\n      imgLoaded: false\n    }\n\n    this.onPlaceSearchComplete = this.onPlaceSearchComplete.bind(this);\n    this.onPlacesImageLoaded = this.onPlacesImageLoaded.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderGooglePlacesImg();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.weatherData.name !== this.props.weatherData.name) {\n      this.setState({imgUrl: null});\n      this.renderGooglePlacesImg();\n    } \n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"d-none\" ref=\"map\"></div>\n        <img className={`w-100 h-100 position-absolute ${(this.state.imgLoaded && this.state.imgUrl !== null) ? \"d-inline\" : \"d-none\"}`} \n          src = {this.state.imgUrl} \n          alt=\"google places representation\" \n          onLoad={this.onPlacesImageLoaded} \n        /> \n      </div>\n    )\n  }\n\n  renderGooglePlacesImg() {\n    let map;\n    let service;\n    let weatherData = this.props.weatherData;\n    let mapCenter = new google.maps.LatLng(weatherData.coord.lat, weatherData.coord.lon);\n  \n    map = new google.maps.Map(this.refs.map, {\n      center: mapCenter,\n      zoom: 15\n    });\n  \n    var request = {\n      query: weatherData.name,\n      fields: ['photos'],\n    };\n  \n    service = new google.maps.places.PlacesService(map);\n    service.findPlaceFromQuery(request, this.onPlaceSearchComplete);\n  }\n  \n  onPlaceSearchComplete(results, status) {\n    if (status === google.maps.places.PlacesServiceStatus.OK) {\n      let imgUrl = results[0].photos[0].getUrl({'maxWidth': 600, 'min-height': 250})\n      this.setState({imgUrl})\n    } \n  }\n\n  onPlacesImageLoaded() {\n    this.setState({imgLoaded: true});\n  }\n}","import React from 'react'\n\nconst FormattedTime = (props) => {\n  let date = new Date(props.timestamp * 1000);\n  let minutes = `0${date.getMinutes()}`;\n  let hours = date.getHours();\n  \n  // convert to 12 hour format\n  let ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n\n  let timeString = `${hours}:${minutes.substr(-2)} ${ampm}`;\n  \n  return (\n    <span>{timeString}</span>\n  )\n}\n\nexport default FormattedTime","import React from 'react'\nimport FormattedTime from './formatted_time'\n\nconst TimeUpdated = (props) => {\n  let date = new Date(props.timestamp * 1000);\n\n  return (\n    <small>{dayOfWeek(date.getDay())} <FormattedTime timestamp={props.timestamp} /></small>\n  )\n}\n\nfunction dayOfWeek(day) {\n  return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][day]\n}\n\nexport default TimeUpdated","import React from 'react'\nimport GooglePlacesImage from './google_places_image';\nimport TimeUpdated from './time_updated';\n\nconst CityBanner = (props) => {\n  return(\n    <div id=\"cityBanner\" className=\"position-relative\">\n      {props.weatherData ? (\n        <div>\n          <div id=\"darkener\" className=\"w-100 h-50 position-absolute\"></div>\n          <div id=\"cityTitle\" className=\"p-3 position-absolute\">\n            <h6 className=\"mb-0\">{props.weatherData.name}, {props.weatherData.sys.country}.</h6>\n            <TimeUpdated timestamp={props.weatherData.dt} />\n          </div>\n          <GooglePlacesImage weatherData={props.weatherData} imgUrl={null}/>\n        </div>\n      ) : (\n        null\n      )}\n\n    </div>\n  );\n}\n\nexport default CityBanner","import React from 'react'\nimport FormattedTime from './formatted_time'\n\nconst OtherStats = (props) => {\n  return (\n    <div id=\"statsGradient\" className=\"p-4\">\n      <table id=\"statsTable\" className=\"table table-sm mb-0\">\n        <tbody>\n          <tr>\n            <th scope=\"row\"><span className=\"oi oi-timer\"></span></th>\n            <td>Pressure</td>\n            <td className=\"text-right\">{props.weatherData.main.pressure}kPa</td>\n          </tr>\n          <tr>\n            <th scope=\"row\"><span className=\"oi oi-droplet\"></span></th>\n            <td>Humidity</td>\n            <td className=\"text-right\">{props.weatherData.main.humidity}%</td>\n          </tr>\n          <tr>\n            <th scope=\"row\"><span className=\"oi oi-sun\"></span></th>\n            <td>Sunrise</td>\n            <td className=\"text-right\"><FormattedTime timestamp={props.weatherData.sys.sunrise} /> </td>\n          </tr>\n          <tr>\n            <th scope=\"row\"><span className=\"oi oi-star\"></span></th>\n            <td>Sunset</td>\n            <td className=\"text-right\"><FormattedTime timestamp={props.weatherData.sys.sunset} /> </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default OtherStats","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../styles/owfont-regular.min.css';\n\nimport Temperature from '../components/temperature'\nimport WeatherDescription from '../components/weather_description'\nimport CityBanner from '../components/city_banner'\nimport OtherStats from '../components/other_stats'\n\nclass WeatherDetails extends Component {\n  render() {\n    let weatherData = this.props.weatherData;\n    if (weatherData.length === 0) {\n      return (\n        <div className=\"card-body text-center text-light\">\n          <CityBanner />\n        </div>\n      )\n    } else {      \n      return (\n        <div className=\"card-body text-light p-0\">\n          <CityBanner weatherData={weatherData} />\n          <Temperature weatherData={weatherData} />\n          <WeatherDescription weatherData={weatherData} />\n          <OtherStats weatherData={weatherData}/>\n        </div>\n      ) \n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { weatherData: state.weatherForCity }\n}\n\nexport default connect(mapStateToProps)(WeatherDetails)","import React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './containers/search_bar'\nimport WeatherDetails from './containers/weather_details'\nconst defaultCity = 'San Francisco'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"card bg-dark mx-auto col-sm-6 p-0 rounded-0\">\n        <SearchBar defaultCity={defaultCity} />\n        <WeatherDetails />\n      </div>  \n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport weatherForCity from './weather_for_city'\n\nconst rootReducer = combineReducers({\n  weatherForCity: weatherForCity\n})\n\nexport default rootReducer","import { FETCH_CITY_WEATHER } from \"../actions/index\";\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case FETCH_CITY_WEATHER: \n      return action.payload.data;\n    default: \n      return state;\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxPromise from 'redux-promise'\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}